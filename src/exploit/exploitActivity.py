# This Python file uses the following encoding: utf-8
import sys
from src.dialog.dialogActivity import dialogActivity
from PySide6.QtWidgets import QApplication, QMainWindow, QTableWidgetItem
from datetime import date
from .exploitUI import Ui_exploitActivity
from .dataDBtoExploit import dataDBToExploit
import openpyxl
from libs.globalVars import TREATMENT_OPTIONS
from libs.funcs import formatNUSHA, isValidNUSHA

class exploitActivity(QMainWindow, dataDBToExploit):
    def __init__(self,credentials ,parent=None):
        self.credentials=credentials
        super().__init__(parent)
        self.ui = Ui_exploitActivity()
        self.ui.setupUi(self)
        self.TREATMENT_OPTIONS=TREATMENT_OPTIONS     #Constant
        self.ui.treatmentTypeComboBox.addItems(self.TREATMENT_OPTIONS)
        self.ui.treatmentTypeComboBox.setEnabled(self.ui.treatmentCheck.isChecked())
        self.ui.dateCheck.checkStateChanged.connect(self.changeDateBox)
        self.ui.treatmentCheck.checkStateChanged.connect(self.changeTreatmentBox)
        self.ui.nushCheck.checkStateChanged.connect(self.changeNushBox)
        self.ui.reload.clicked.connect(self.reloadExcel)
        self.ui.exportButton.clicked.connect(self.export)
        self.getAttendings()
        self.ui.doctorComboBox.addItems(self.doctors)
        self.ui.radiophysicistComboBox.addItems(self.radiophysicists)
        self.ui.radiophysicistCheckBox.checkStateChanged.connect(self.changeRadiophysicist)
        self.ui.doctorCheckBox.checkStateChanged.connect(self.changeDoctor)
        self.populateTableView()

    def changeDateBox(self):
        self.ui.dateFrame.setEnabled(self.ui.dateCheck.isChecked())
        self.loadTableList()
    
    def changeTreatmentBox(self):
        self.ui.treatmentTypeComboBox.setEnabled(self.ui.treatmentCheck.isChecked())
        self.loadTableList()

    def changeNushBox(self):
        self.ui.nushEdit.setEnabled(self.ui.nushCheck.isChecked())
        self.loadTableList()
    
    def changeRadiophysicist(self):
        self.ui.radiophysicistComboBox.setEnabled(self.ui.radiophysicistCheckBox.isChecked())
        self.loadTableList()
    
    def changeDoctor(self):
        self.ui.doctorComboBox.setEnabled(self.ui.doctorCheckBox.isChecked())
        self.loadTableList()


    def populateTableView(self):
        self.ui.previsualitationTable.setRowCount(0)
        for row in range(len(self.excelTable)):
            i=self.excelTable[row]
            rowNumber=self.ui.previsualitationTable.rowCount()
            self.ui.previsualitationTable.insertRow(rowNumber)
            self.ui.previsualitationTable.setItem(rowNumber, 0, QTableWidgetItem(formatNUSHA(str(i[0]))))
            self.ui.previsualitationTable.setItem(rowNumber, 1, QTableWidgetItem(str(i[1])))
            self.ui.previsualitationTable.setItem(rowNumber, 2, QTableWidgetItem(str(TREATMENT_OPTIONS[i[2]])))
            for contentIndex in range(3,len(i)):
                item=i[contentIndex]
                if item:
                    self.ui.previsualitationTable.setItem(rowNumber, contentIndex, QTableWidgetItem(str(i[contentIndex])))

    def reloadExcel(self):
        self.loadTableList()
        if(self.ui.nushCheck.isChecked()):
            self.filterByNush(self.ui.nushEdit.text())

        if(self.ui.treatmentCheck.isChecked()):
            self.filterByTreatmentType(self.ui.treatmentTypeComboBox.currentIndex())

        if(self.ui.dateCheck.isChecked()):
            self.filterByDate(date.fromisoformat(str(self.ui.beginDate.date().toPython())).toordinal(),
                date.fromisoformat(str(self.ui.endDate.date().toPython())).toordinal())

        if(self.ui.radiophysicistCheckBox.isChecked()):
            self.filterByRadioPhysicists(self.radiophysicists[self.ui.radiophysicistComboBox.currentIndex()])

        if(self.ui.doctorCheckBox.isChecked()):
            self.filterByDoctor(self.doctors[self.ui.doctorComboBox.currentIndex()])
        self.populateTableView()
        
    def export(self):
        if(self.ui.fileNameEdit.text()!=""):
            workbook=openpyxl.Workbook()
            sheet=workbook.active
            sheet.append(("NUSHA", 
                "Nº de tratamiento", 
                "Tipo",
                "Solicitud",
                "Recepción completa",
                "QA1",
                "Duración QA1",
                "QA2",
                "Duración QA2",
                "Fin del calculo",
                "Duración del cálculo",
                "Emisión"
                "Duración total"))
            for i in self.excelTable:
                sheet.append(i)
            if ".xls" in self.ui.fileNameEdit.text():
                workbook.save(self.ui.fileNameEdit.text())
            else:
                workbook.save(self.ui.fileNameEdit.text()+".xls")
